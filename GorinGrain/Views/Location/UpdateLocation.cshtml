@model GorinGrain.ViewModels.LocationVM
@{
    ViewBag.Title = "UpdateLocation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    body {
        background-image: url(http://static1.squarespace.com/static/55b595d2e4b0cc4be26e07b8/55d13a44e4b05f1da673f893/5636d992e4b09ef9b62510cd/1459709463477/?format=1000w);
        background-repeat: no-repeat;
        background-size: cover;
    }
</style>

<h2>View Location</h2>
@using (Html.BeginForm("UpdateLocation", "Location", FormMethod.Post))
{
    @Html.HiddenFor(model => Model.Location.LocationID, Model.Location.LocationID)

    <div class="form-group">
        @Html.LabelFor(model => Model.Location.LocationName)
        @Html.TextBoxFor(model => Model.Location.LocationName, "", new { @class = "form-control", @placeholder = "Location Name" })
        @Html.ValidationMessageFor(model => Model.Location.LocationName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => Model.Location.Address)
        @Html.TextBoxFor(model => model.Location.Address, new { @class = "form-control", @placeholder = "Address..." })
        @Html.ValidationMessageFor(model => model.Location.Address, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => Model.Location.Phone)
        @Html.TextBoxFor(model => model.Location.Phone, "", new { @class = "form-control", @placeholder = "Phone..." })
        @Html.ValidationMessageFor(model => model.Location.Phone, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => Model.Location.MaxCapacity)
        @Html.TextBoxFor(model => model.Location.MaxCapacity, "", new { @class = "form-control", @placeholder = "Maximum Capacity, in Bu..." })
        @Html.ValidationMessageFor(model => model.Location.MaxCapacity, "", new { @class = "text-danger" })
    </div>
            
    <div class="form-group">
        @Html.ValidationMessageFor(model => model.Location, Model.ErrorMessage, new { @class = "text-danger" })
    </div>

    <!--Button to submit-->
        <div class="form-group">
        <!--   button is of type submit, and value is the name of it   -->
        <input class="btn btn-success" type="submit" value="submit" new { onclick="return confirm('Do you wish to update the record with these changes?');" }/>
    </div>

}
